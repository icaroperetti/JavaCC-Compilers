/* Generated By:JavaCC: Do not edit this line. WorkConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface WorkConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int EOL = 6;
  /** RegularExpression Id. */
  int INCREMENTO = 7;
  /** RegularExpression Id. */
  int MAIS = 8;
  /** RegularExpression Id. */
  int MENOS = 9;
  /** RegularExpression Id. */
  int LETTER = 10;
  /** RegularExpression Id. */
  int DIGIT = 11;
  /** RegularExpression Id. */
  int NUMEROS = 12;
  /** RegularExpression Id. */
  int TIPO = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int STRING = 15;
  /** RegularExpression Id. */
  int BYTE = 16;
  /** RegularExpression Id. */
  int FLOAT = 17;
  /** RegularExpression Id. */
  int DOUBLE = 18;
  /** RegularExpression Id. */
  int BOOLEAN = 19;
  /** RegularExpression Id. */
  int CHAR = 20;
  /** RegularExpression Id. */
  int LITERALS = 21;
  /** RegularExpression Id. */
  int OPER_ARITMETICO = 22;
  /** RegularExpression Id. */
  int OPER_RELACIONAL = 23;
  /** RegularExpression Id. */
  int FUNCTION = 24;
  /** RegularExpression Id. */
  int BOOL = 25;
  /** RegularExpression Id. */
  int TRUE = 26;
  /** RegularExpression Id. */
  int FALSE = 27;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 28;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 29;
  /** RegularExpression Id. */
  int ABRE_CHAVES = 30;
  /** RegularExpression Id. */
  int FECHA_CHAVES = 31;
  /** RegularExpression Id. */
  int IF = 32;
  /** RegularExpression Id. */
  int ELSE = 33;
  /** RegularExpression Id. */
  int ELSEIF = 34;
  /** RegularExpression Id. */
  int VALUES = 35;
  /** RegularExpression Id. */
  int ATRIBUICAO = 36;
  /** RegularExpression Id. */
  int VIRGULA = 37;
  /** RegularExpression Id. */
  int WHILE = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<COMMENT>",
    "\";\"",
    "<INCREMENTO>",
    "\"++\"",
    "\"--\"",
    "<LETTER>",
    "<DIGIT>",
    "<NUMEROS>",
    "<TIPO>",
    "\"int\"",
    "\"String\"",
    "\"byte\"",
    "\"float\"",
    "\"double\"",
    "\"boolean\"",
    "\"char\"",
    "<LITERALS>",
    "<OPER_ARITMETICO>",
    "<OPER_RELACIONAL>",
    "\"function\"",
    "<BOOL>",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"if(\"",
    "\"else\"",
    "\"elseif\"",
    "<VALUES>",
    "\"=\"",
    "\",\"",
    "\"while(\"",
  };

}
