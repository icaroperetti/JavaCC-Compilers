<<<<<<< HEAD
/* Generated By:JavaCC: Do not edit this line. WorkConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface WorkConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE = 5;
  /** RegularExpression Id. */
  int EOL = 6;
  /** RegularExpression Id. */
  int INCREMENTO = 7;
  /** RegularExpression Id. */
  int MAIS = 8;
  /** RegularExpression Id. */
  int MENOS = 9;
  /** RegularExpression Id. */
  int LETTER = 10;
  /** RegularExpression Id. */
  int DIGIT = 11;
  /** RegularExpression Id. */
  int TIPO = 12;
  /** RegularExpression Id. */
  int INT = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int BYTE = 15;
  /** RegularExpression Id. */
  int FLOAT = 16;
  /** RegularExpression Id. */
  int DOUBLE = 17;
  /** RegularExpression Id. */
  int BOOLEAN = 18;
  /** RegularExpression Id. */
  int CHAR = 19;
  /** RegularExpression Id. */
  int LITERALS = 20;
  /** RegularExpression Id. */
  int OPERADORES_ARITIMETICOS = 21;
  /** RegularExpression Id. */
  int ADICAO = 22;
  /** RegularExpression Id. */
  int SUBTRACAO = 23;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 24;
  /** RegularExpression Id. */
  int DIVISAO = 25;
  /** RegularExpression Id. */
  int FUNCTION = 26;
  /** RegularExpression Id. */
  int BOOL = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 30;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 31;
  /** RegularExpression Id. */
  int ABRE_CHAVES = 32;
  /** RegularExpression Id. */
  int FECHA_CHAVES = 33;
  /** RegularExpression Id. */
  int IF = 34;
  /** RegularExpression Id. */
  int ELSE = 35;
  /** RegularExpression Id. */
  int ELSEIF = 36;
  /** RegularExpression Id. */
  int VALUES = 37;
  /** RegularExpression Id. */
  int ATRIBUICAO = 38;
  /** RegularExpression Id. */
  int VIRGULA = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<SINGLE_LINE>",
    "\";\"",
    "<INCREMENTO>",
    "\"++\"",
    "\"--\"",
    "<LETTER>",
    "<DIGIT>",
    "<TIPO>",
    "\"int\"",
    "\"String\"",
    "\"byte\"",
    "\"float\"",
    "\"double\"",
    "\"boolean\"",
    "\"char\"",
    "<LITERALS>",
    "<OPERADORES_ARITIMETICOS>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"function\"",
    "<BOOL>",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"if\"",
    "\"else\"",
    "\"elseif\"",
    "<VALUES>",
    "\"=\"",
    "\",\"",
  };

}
=======
/* Generated By:JavaCC: Do not edit this line. WorkConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface WorkConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE = 5;
  /** RegularExpression Id. */
  int EOL = 6;
  /** RegularExpression Id. */
  int INCREMENTO = 7;
  /** RegularExpression Id. */
  int MAIS = 8;
  /** RegularExpression Id. */
  int MENOS = 9;
  /** RegularExpression Id. */
  int LETTER = 10;
  /** RegularExpression Id. */
  int DIGIT = 11;
  /** RegularExpression Id. */
  int TIPO = 12;
  /** RegularExpression Id. */
  int INT = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int BYTE = 15;
  /** RegularExpression Id. */
  int FLOAT = 16;
  /** RegularExpression Id. */
  int DOUBLE = 17;
  /** RegularExpression Id. */
  int BOOLEAN = 18;
  /** RegularExpression Id. */
  int CHAR = 19;
  /** RegularExpression Id. */
  int LITERALS = 20;
  /** RegularExpression Id. */
  int OPER_ARITMETICO = 21;
  /** RegularExpression Id. */
  int OPER_RELACIONAL = 22;
  /** RegularExpression Id. */
  int FUNCTION = 23;
  /** RegularExpression Id. */
  int BOOL = 24;
  /** RegularExpression Id. */
  int TRUE = 25;
  /** RegularExpression Id. */
  int FALSE = 26;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 27;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 28;
  /** RegularExpression Id. */
  int ABRE_CHAVES = 29;
  /** RegularExpression Id. */
  int FECHA_CHAVES = 30;
  /** RegularExpression Id. */
  int IF = 31;
  /** RegularExpression Id. */
  int ELSE = 32;
  /** RegularExpression Id. */
  int ELSEIF = 33;
  /** RegularExpression Id. */
  int VALUES = 34;
  /** RegularExpression Id. */
  int ATRIBUICAO = 35;
  /** RegularExpression Id. */
  int VIRGULA = 36;
  /** RegularExpression Id. */
  int WHILE = 37;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<SINGLE_LINE>",
    "\";\"",
    "<INCREMENTO>",
    "\"++\"",
    "\"--\"",
    "<LETTER>",
    "<DIGIT>",
    "<TIPO>",
    "\"int\"",
    "\"String\"",
    "\"byte\"",
    "\"float\"",
    "\"double\"",
    "\"boolean\"",
    "\"char\"",
    "<LITERALS>",
    "<OPER_ARITMETICO>",
    "<OPER_RELACIONAL>",
    "\"function\"",
    "<BOOL>",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"if\"",
    "\"else\"",
    "\"elseif\"",
    "<VALUES>",
    "\"=\"",
    "\",\"",
    "\"while(\"",
  };

}
>>>>>>> 0b102f7eefe8edc8ad3a59652f0460333d1e938b
